#!/bin/bash
# This script can be called from anywhere.
MYBASENAME=`perl -MCwd -e 'print Cwd::abs_path shift' "$0"`
MYPATH=`dirname "$MYBASENAME"`

. helper/common

BUNDLE=0

usage() {
 echo "$0 - creates a GeoGebra Discovery Classic 5 package for the current native platform"
 echo "Usage: $0 [options]"
 echo " where [options] can be:"
 echo "  -h          this help"
 echo "  -j          add Java Runtime Environment from \"$JAVA_HOME\" to the bundle"
 exit 0
 }

while getopts "jh" OPT; do
 case $OPT in
  j)
   BUNDLE=1
   ;;
  h)
   usage
   ;;
  \?)
   echo "Invalid option: $OPTARG" 1>&2
   exit 1
   ;;
 esac
done

# Put name of the filters into $@ (unused)
shift $((OPTIND-1))


test -x fork/geogebra/desktop/build/install/desktop/bin/desktop
rm -fr dist/$PACKAGE_NAME
mkdir -p dist/$PACKAGE_NAME/geogebra
rsync -ur fork/geogebra/desktop/build/install/desktop dist/$PACKAGE_NAME/geogebra

# Platform dependent parts
if [ "$OS_VARIANT" = "Windows" ]; then
 for i in linux mac; do
  rm -f dist/$PACKAGE_NAME/geogebra/desktop/lib/*$i*.jar
  done
 rm -f dist/$PACKAGE_NAME/geogebra/desktop/bin/desktop
 echo "@echo Welcome to $SOFTWARE_NAME
@set JAVA_OPTS=\"-Djava.library.path=%cd%\\geogebra\\desktop\\lib\"
@call geogebra\\desktop\\bin\\desktop.bat %*" > dist/$PACKAGE_NAME/GeoGebra-Discovery.bat
 # Use the MSYS2/CLANG* build:
 cp fork/geogebra/desktop/build/lib{crypto-1_1*,c++,unwind,readline8,termcap-0}.dll dist/$PACKAGE_NAME
 cp fork/geogebra/desktop/build/tarski.dll dist/$PACKAGE_NAME/geogebra/desktop/lib
 # End of copying
 if [[ "$OS_VERSION" == *"MINGW32"* ]]; then
  WINARCH=32
 else
  WINARCH=64
  fi
 ZIPNAME=$PACKAGE_NAME-Windows$WINARCH

else
# Non-cross-platform deployment
mkdir -p dist/$PACKAGE_NAME/helper
cp helper/detect dist/$PACKAGE_NAME/helper
rm -f dist/$PACKAGE_NAME/geogebra/desktop/bin/desktop.bat

if [ $BUNDLE = 1 -a "$JAVA_HOME" != "" ]; then
 mkdir dist/$PACKAGE_NAME/jre
 rsync -ur "$JAVA_HOME"/* dist/$PACKAGE_NAME/jre
 fi
if [ "$OS_VARIANT" = Raspbian ]; then
 for i in windows mac i586 amd64 libpxcc zspace; do
  rm -f dist/$PACKAGE_NAME/geogebra/desktop/lib/*$i*.jar
  done
 ZIPNAME=$PACKAGE_NAME-RaspberryPi
else
 if [ "$OS_VARIANT" = Mac ]; then
  for i in windows linux i586 amd64 libpxcc zspace; do
   rm -f dist/$PACKAGE_NAME/geogebra/desktop/lib/*$i*.jar
   done
  cp fork/geogebra/desktop/build/libtarski.jnilib dist/$PACKAGE_NAME/geogebra/desktop/lib
  ZIPNAME=$PACKAGE_NAME-Mac
 else
  for i in windows mac i586 arm libpxcc zspace; do
   rm -f dist/$PACKAGE_NAME/geogebra/desktop/lib/*$i*.jar
   done
  cp fork/geogebra/desktop/build/libtarski.so dist/$PACKAGE_NAME/geogebra/desktop/lib
  ZIPNAME=$PACKAGE_NAME-Linux64
  fi
 fi
# Linux startup shell
echo "#!/bin/bash

# This script can be called from anywhere.
MYBASENAME=\`perl -MCwd -e 'print Cwd::abs_path shift' \"\$0\"\`
MYPATH=\`dirname \"\$MYBASENAME\"\`

echo \"Welcome to $SOFTWARE_NAME\"
. \"\$MYPATH\"/helper/detect
test -x \"\$MYPATH\"/jre && export JAVA_HOME=\"\`perl -MCwd -e 'print Cwd::abs_path shift' \"\$MYPATH\"/jre\`\"
echo
# New settings:
export JAVA_OPTS=\"-Djava.library.path=\\\"\$MYPATH\\\"/geogebra/desktop/lib\"
\"\$MYPATH\"/geogebra/desktop/bin/desktop \"\$@\"" > dist/$PACKAGE_NAME/GeoGebra-Discovery
chmod 755 dist/$PACKAGE_NAME/GeoGebra-Discovery
fi # End of non-cross-platform deployment

# Common parts in all types of deployments
rm dist/$PACKAGE_NAME/geogebra/desktop/lib/tarski-*.zip
if [ $BUNDLE = 1 ]; then
 ZIPNAME=$ZIPNAME-withJava
 fi
ZIPNAME=$ZIPNAME.zip
cd dist
rm -f $ZIPNAME
zip -9r $ZIPNAME $PACKAGE_NAME
