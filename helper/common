#!/bin/bash
set -e
. helper/detect
if [ "$OS_VARIANT" = Raspbian ]; then
 JDK_REL=/usr/lib/jvm/java-11-openjdk-armhf
 export GRADLE_OPTIONS="-Dorg.gradle.jvmargs=-Xmx2000m -DXX:MaxMetaspaceSize=2000m"
 test -x "$JDK_REL/bin/java"
else # non-Raspbian
 if [ "$OS_VARIANT" = Windows ]; then
  # If a 32-bit toolchain is started, we go for running a 32-bit Java:
  if [[ "$OS_VERSION" == *"MINGW32"* ]]; then
   JAVA=`find /c/Program\ Files\ \(x86\)\/Java/* | sort | grep jdk | head -1`
  else
   # ...otherwise we use a 64-bit version.
   # JAVA=`find /c/Program\ Files\/OpenJDK/* | sort | head -1`
   JAVA=`find /c/Program\ Files\/Microsoft/jdk* | sort | head -1`
  fi
  if [ "$JAVA" = "" ]; then
   echo "No Java found. Consider installing it."
   exit 1
   fi # no Java on Windows
  JDK_REL="$JAVA"
 else # non-Windows and non-Raspbian
  PWD=`pwd`
  if [ "$OS_VARIANT" != Mac ]; then
   JDK_REL="$PWD/buildtools/jbr" # Mac
  else
   JDK_REL="$PWD/buildtools/jbrsdk/Contents/Home" # non-Mac
   fi
  test -x "$JDK_REL/bin/java"
  fi # non-Windows
 fi # non-Raspbian
export JAVA_HOME="$JDK_REL"

GEOGEBRACONSTANTS_FILE=fork/geogebra/common/src/main/java/org/geogebra/common/GeoGebraConstants.java
test -r $GEOGEBRACONSTANTS_FILE && {
 GGB_VERSION=`cat $GEOGEBRACONSTANTS_FILE |\
  grep " VERSION_STRING = " | awk '{print $7}' | sed s/\"//g | sed s/";"//`
 TODAY=`cat $GEOGEBRACONSTANTS_FILE |\
  grep " DISCOVERY_VERSION = " | awk '{print $7}' | sed s/\"//g | sed s/";"//`
 SOFTWARE_NAME="GeoGebra Discovery $TODAY (based on GeoGebra $GGB_VERSION)"
 PACKAGE_NAME="GeoGebra-Discovery-$GGB_VERSION-$TODAY"
 GGB_VERSION6=`echo $GGB_VERSION | sed s/^5/6/`
 PACKAGE_NAME6="GeoGebra-Discovery-$GGB_VERSION6-$TODAY"
 export GGB_VERSION GGB_VERSION6 SOFTWARE_NAME PACKAGE_NAME
 } || true
